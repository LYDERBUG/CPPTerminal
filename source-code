//Version 1.3
#include<iostream>

std::string menu_selection;
std::string num_one = "1";
std::string num_two = "2";

int menu() {
    std::cout << "Menu\n";
    std::cout << "[1] : Game\n";
    std::cout << "[2] : Exit\n";
    //how many you can re-attempt to enter input
    int index = 3;

    for(index; index > 0; index--) {
        std::cout << "Type \'/info-game\' for game details\n";
        std::cout << "Enter [1/2] to select: ";

        getline(std::cin, menu_selection);

        if(menu_selection == num_one) {
            std::cout << "\nGame coming soon :O";
            break;
            //vacant
        } else if(menu_selection == num_two) {
            std::cout << "\n- Session ended";
            break;
        } else if(menu_selection == "/info-game") {
            std::cout << "\nNo games currently available. Coming soon";
            break;
            //vacant
            //Too many attempt for Empty input
        } else if(menu_selection.empty() && index == 1) {
            std::cout << "\nInput can't be empty, try again\n";
            std::cout << "Too many attempts, Press ENTER to reconnect.";
        } else if(menu_selection.empty()) {
            std::cout << "\nInput can't be empty, try again" << std::endl;

            //Too many attempt for /info-game
        } else if((menu_selection.at(0) == '/' || menu_selection.at(0) == 'info' || menu_selection.at(0) == 'game') && index == 1) {
            std::cout << "\nInput error, \'/info-game\' did you mean?\n";
            std::cout << "Too many attempts, Press ENTER to reconnect";
        } else if(menu_selection.at(0) == '/' || menu_selection.at(0) == 'info' || menu_selection.at(0) == 'game') {
            std::cout << "\nInput error, \'/info-game\' did you mean?" << std::endl;

            //Too many attempt for 11+ characters
        } else if(menu_selection.length() >= 11 && index == 1) {
            std::cout << "\n[Error \'" + menu_selection + "\' Incorrect. Try again]" << std::endl;
            std::cout << "Too many attempts, Press ENTER to reconnect";
        } else if(menu_selection.length() >= 11) {
            std::string error_length = menu_selection.substr(0,8);
            std::cout << "\n[Error \'" << error_length << "...\'" << " Incorrect. Try again]" << std::endl;

            //Too many attempt for wrong input
        } else if(menu_selection.length() >= 1 && index == 1) {
            std::cout << "\n[Error \'" + menu_selection + "\' Incorrect. Try again]" << std::endl;
            std::cout << "Too many attempts, Press ENTER to reconnect";
        } else if(menu_selection.length() <= 2) {
            std::cout << "\n[Error \'" + menu_selection + "\' Incorrect. Try again]" << std::endl;

        } else {
            std::cout << "\n[Error \'" + menu_selection + "\' Incorrect. Try again]" << std::endl;
        }
    }
    return 0;
}
int main() {
    menu();
    return 0;
}
